[{"content":" Wireshark: Packets: In a real world blue team operation usually the threat analysts are given with \u0026lsquo;PCAP\u0026rsquo; files to analyze which systems are getting affected by the malware / what is the C2 server of the attacker/ where did the malware spread from which time, what\u0026rsquo;s the IP of those infected systems etc. . .\nWhat are PCAP files? -\u0026gt; PCAP file is a exported format of the captured data from Layer 2-7 of the OSI model by wireshark. We can share that captured data to anyone to analyze what happened within this timeframe in the network.\nPractical DEMO: Install the PCAP file from this page: PCAP_FILE Open up wireshark -\u0026gt; sudo wireshark Display filters: Filtering http requests -\u0026gt; {http.request} Source IP filtering -\u0026gt; ip.src==IP_ADDR HTTP,DNS,FTP,ICMP capture filter -\u0026gt; http , ftp , dns , icmp ip.addr == IP_ADDR \u0026amp;\u0026amp; http.request.method == \u0026quot;POST/GET\u0026quot; http.host ==\u0026quot;HOST_NAME\u0026quot; eth.addr==MAC_ADDR We can filter out services using port number also -\u0026gt; tcp.port==80/21/22/23/25/3306/445/139 Analyzing a PCAP file of infections regarding \u0026lsquo;dridex\u0026rsquo; malware -\u0026gt; tls.handshake.type eq 1 right click on TLSv1.2 -\u0026gt; follow -\u0026gt; TCP stream -\u0026gt; Everything is encrypted here. Command used to identify the connections made from the client to execute the actual DLL -\u0026gt; (http.request or tls.handshake.type eq 1) and !(ssdp) We are having the TLS keys to decrypt them Identified the actual dll file -\u0026gt; We will export this file as an object file and then upload it on virus total -\u0026gt; Importing system32 files : Identified the C2 server -\u0026gt; After executing the malware the client is acutally getting connected with the C2 server of the attacker. Device identification using nbns {NetBios Name Service} -\u0026gt; ","permalink":"https://0x-s0M3n4th.github.io/notes/blue-team-ops/00-wireshark/intro-to-wireshark/","summary":"\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWireshark: \u003cimg alt=\"Wireshark-intro\" loading=\"lazy\" src=\"/images/WIRESHARK_TUT/Wireshark-intro.png\"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePackets: \u003cimg alt=\"Packets\" loading=\"lazy\" src=\"/images/WIRESHARK_TUT/Packets.png\"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn a real world blue team operation usually the threat analysts are given with \u0026lsquo;PCAP\u0026rsquo; files to analyze which systems are getting affected by the malware / what is the C2 server of the attacker/ where did the malware spread from which time, what\u0026rsquo;s the IP of those infected systems etc. . .\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eWhat are PCAP files?\u003c/em\u003e -\u0026gt; PCAP file is a exported format of the captured data from Layer 2-7 of the OSI model by wireshark. We can share that captured data to anyone to analyze what happened within this timeframe in the network.\u003c/p\u003e","title":"Practical Wireshark"},{"content":"Welcome fighters!\nHello, as you have already come here that means you are interested in red teaming and blogging staff. A very good welcome to you guys and for your time.\nWhat You’ll Find Here\nRed Teaming Notes\nI share real-world notes and tactics I’ve picked up through learning, labs, and exercises. Think of it as my personal “Field Manual” — from privilege escalation to lateral movement and beyond.\nMy own stuff that i will be learning constantly\nI will be sharing what i am learning on my journey to help people on different topics.\nLab Setups \u0026amp; Exploitations\nI build offensive labs from scratch — Active Directory setups, misconfigurations, pivoting environments — and walk through my exploitations with real tooling and thought process.\nMy Journey\nI also log my personal growth: certifications I pursue, challenges I overcome, and what I learn along the way — raw and unfiltered.\nWho Is This For?\nWhether you’re: - If you are a hardcore learner, it\u0026rsquo;s definately for you.\nThis blog is designed to share, teach, and grow together.\nOngoing Work\nThis site is a live project. I update as I learn — so expect new posts, refined notes, and more lab walkthroughs on weekly basis. I am not the best, i follow many folks to get a ton of knowledge and guidance.\nFeel free to browse through the Blogs, check out my Notes, or dive into Tags to filter by topics of interest.\nHave a great time here !\n","permalink":"https://0x-s0M3n4th.github.io/blogs/welcome/","summary":"\u003cp\u003eWelcome fighters!\u003c/p\u003e\n\u003cp\u003eHello, as you have already come here that means you are interested in red teaming and blogging staff. A very good welcome to you guys and for your time.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003eWhat You’ll Find Here\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRed Teaming Notes\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI share real-world notes and tactics I’ve picked up through learning, labs, and exercises. Think of it as my personal “Field Manual” — from privilege escalation to lateral movement and beyond.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMy own stuff that i will be learning constantly\u003c/strong\u003e\u003c/p\u003e","title":"Recon on myself"},{"content":"Radhe Radhe!\nThis is going to be a very raw blog, mostly about what I am going to post in the next few months, and what I have been doing for the past few weeks.\nSo, let\u0026rsquo;s start with what I was doing\u0026hellip;\nAfter completing eJPT certification and learning the basics as well as core concepts of system administration, I got my hands dirty on CTF platforms like HTB. I took a one-month subscription just to get the experience of it. But not gonna lie, it was not what I expected. First of all, playing CTFs on these platforms are very good for many people, and the platforms do a great job. But I didn\u0026rsquo;t like the CTFish or more like obviously vulnerable experience. I thought the normal HTB boxes would replicate real-world scenarios—hardened systems where normal scans easily fail, and where initial access depends on phishing, social engineering, or hardcore OSINT rather than an obvious open port. That wasn\u0026rsquo;t what I found. But definately HTB is a great platform for sharpening your skills under time pressure.\nLater I realized that I could get this experience through HTB pro boxes(not sure though), but I don\u0026rsquo;t have the money for it. So I decided to make my own home lab. I took the PNPT course offered by TCM Security. It was hands-on, very good for beginners who want to learn how actual real-world pentest workflows work. After that, I expanded my lab. Let me give you an overview of what my lab includes:\nATTACK-NET : kali linux PENTEST-NET : metasploitable2 linux, kioptrix, DEV, Black Pearl, UBUNTU-SERVER EXTERNAL-RED : Win server 2019(fully custom, I do the administrative configs on it) PIVOT-NET : THEPUNISHER(win 10 enterprise), THESUPERMAN(win 10 enterprise) SECURE-NET : Windows server 2022 This is my home lab. I do all of my experiments in this whole lab. I have made 3 custom networks to simulate a real-world scenario in vmware. My PIVOT-NET and SECURE-NET machines are totally isolated from the internet. Later I will share the entire lab setup I created for my home lab through a blog/sharing my notes.\nAlong with all of this stuff, I was confused about whether I should do any more certifications or learn by myself through blogs/articles/books. After 1.5 months of procrastination, I got stuck in a situation where I couldn\u0026rsquo;t decide whether I should do HTB CPTS for knowledge or learn from books.\nFinally, I convinced myself that I would go for books, not certifications. But the problem is that I don\u0026rsquo;t have a lot of money to purchase hacking books, because they are all so expensive for me. So I downloaded PDF copies that are available on the internet for free and started learning.\nI started reading books this month. Currently, I am reading The Ultimate Kali Linux Book, Third Edition, and Automation using Python. These two are my go-tos. Let me tell you now after reading half of both books that this was my best decision for learning and moving forward in this field. Maybe this can differ for you, but for me, this is the right way. I have noticed significant changes in my notes and knowledge since I started using books consistently. I will also share those notes in my blog\u0026rsquo;s notes section.\nTakeaway from all this thinking: Take your time and think wisely about what you want to do and how you want to do it\u0026hellip; don\u0026rsquo;t just believe my opinion, either. This is very important. If you don\u0026rsquo;t think carefully and just jump into something, maybe it can work, but that\u0026rsquo;s just gambling. Take your time to think.\nI don\u0026rsquo;t know how much this strategy will work for me in the future, but I will just keep moving with this because I am loving this way.\nNow what I will be posting next: In the next few months, I will try to post my Pentesting notes along the way of the book\u0026rsquo;s progress. I will also post about different forensics techniques.git Starting in November, I might jump into web application security if possible.\n","permalink":"https://0x-s0M3n4th.github.io/blogs/blog_1/","summary":"\u003cp\u003eRadhe Radhe!\u003c/p\u003e\n\u003cp\u003eThis is going to be a very raw blog, mostly about what I am going to post in the next few months, and what I have been doing for the past few weeks.\u003c/p\u003e\n\u003cp\u003eSo, \u003cem\u003elet\u0026rsquo;s start with what I was doing\u0026hellip;\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eAfter completing \u003ccode\u003eeJPT\u003c/code\u003e certification and learning the basics as well as core concepts of \u003ccode\u003esystem administration\u003c/code\u003e, I got my hands dirty on \u003ccode\u003eCTF platforms\u003c/code\u003e like \u003ccode\u003eHTB\u003c/code\u003e. I took a one-month subscription just to get the experience of it. But not gonna lie, it was not what I expected. First of all, playing \u003ccode\u003eCTFs\u003c/code\u003e on these platforms are very good for many people, and the platforms do a great job. But I didn\u0026rsquo;t like the \u003ccode\u003eCTFish\u003c/code\u003e or more like \u003ccode\u003eobviously vulnerable\u003c/code\u003e experience. I thought the normal HTB boxes would replicate real-world scenarios—hardened systems where normal scans easily fail, and where initial access depends on phishing, social engineering, or hardcore OSINT rather than an obvious open port. That wasn\u0026rsquo;t what I found. But definately \u003ccode\u003eHTB\u003c/code\u003e is a great platform for sharpening your skills under time pressure.\u003c/p\u003e","title":"Why i chose books over certs!"},{"content":"\nHow snort works: snort IDS network implementation: Lab environment: we are not going to use this lab env just for the sake of simplicity of this excersise. Installing snort on ubuntu 20.04 LTS : Before installing make sure promisc mode is on. While installing you will be prompted with to provide the interface name and subnet range sudo apt-get install snort -y cd /etc/snort # The snort config files are sotred there only Now we need to make a backup of the snort config files -\u0026gt; to copy the file we need to have elevated privileges. cp snort.conf snort-backup.conf We are going to make most of the changes inside the snort.conf , the first thing we need to do is to setup the subnet-range that will be used by snort -\u0026gt; vim snort.conf Now we need to disable all the community rules provided inside the config files as we are going to make our own rules. Comment down all the community rules. Except the local rules file, comment everything below it, till this line -\u0026gt; After that we will set up our own rules. Come inside the rules folder, there will be a file named local.rules -\u0026gt; vim /rules/local.rules I have made a first rule for detecting ICMP packets inside our network -\u0026gt; Breakdown of the command -\u0026gt; alert -\u0026gt; It is used for sending an alert when ICMP packets will get detected. icmp -\u0026gt; protocol name, also ping sweeps essentially utilizes ICMP requests. any -\u0026gt; The first \u0026lsquo;any\u0026rsquo; is to detect incoming ICMP request from any external network. any -\u0026gt; second \u0026lsquo;any\u0026rsquo; is to detect request coming from any port. $HOME_NET -\u0026gt; This means any ICMP ping is coming to our home network, which has been configured inside the snort.conf file. Remember the subnet range. any -\u0026gt; Here we usually specify the port number, as ping does not utilize any specific port that\u0026rsquo;s why we are setting it as \u0026lsquo;any\u0026rsquo; port. After this we need to specify an alert message -\u0026gt; (msg: \u0026quot;YOUR MESSAGE\u0026quot; sid -\u0026gt; signature id, provide any unique value rev -\u0026gt; Revisions for specified rules. Now we need to run snort -\u0026gt; snort -q -l /var/log/snort/ -i ens33 -A console -c /etc/snort/snort.conf Then ping from any device to any other device within your network subnet, it will capture those pings and give us alerts. Now i will setup another rule for ssh auth -\u0026gt; vim /etc/snort/rules/local.rules Rule -\u0026gt; In this scenario i am using a vulnerable machine metasploitable2 Now start snort again with the same command. Then i will ssh from my kali machine to \u0026lsquo;metasploitable2\u0026rsquo; -\u0026gt; And everything is detected. SNORPY tool: Making of an ftp alert message using snorpy tool specifically for traffic coming inside the metasploitable2 machine -\u0026gt; Adjust the rules and Copy paste it inside the local.rules file. I ftp\u0026rsquo;ed inside the vulnerable machine and snort detected it-\u0026gt; Community rules -\u0026gt; If you want to download the snort community rules -\u0026gt; Extract the rules, and you can use the community rules by copying pasting them directly inside your snort.conf snort rule for Eternal blue exploit -\u0026gt; If you want to store your logs into an alert file, don\u0026rsquo;t want to be shown in the screen then use this option -\u0026gt; snort -q -l /var/log/snort/ -i ens33 -A fast -c /etc/snort/snort.conf This will store the logs into /vat/log/alert file, and it won\u0026rsquo;t show the output over to the display. Tip To edit bulk lines in vim use this format :563,695s/^/#/ \u0026lsquo;:starting_line,last_line{s}/^/character_you_want_to_add{#}/\u0026rsquo;\n","permalink":"https://0x-s0M3n4th.github.io/notes/blue-team-ops/01-snort/intrusion-detection-with-snort/","summary":"\u003cp\u003e\u003cimg alt=\"SNORT_INTRO_1\" loading=\"lazy\" src=\"/images/SNORT_TUT/SNORT_INTRO_1.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"how-snort-works\"\u003eHow snort works:\u003c/h3\u003e\n\u003cp\u003e\u003cimg alt=\"SNORT_INTRO_2\" loading=\"lazy\" src=\"/images/SNORT_TUT/SNORT_INTRO_2.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"snort-ids-network-implementation\"\u003esnort IDS network implementation:\u003c/h3\u003e\n\u003cp\u003e\u003cimg alt=\"SNORT_INTRO_3\" loading=\"lazy\" src=\"/images/SNORT_TUT/SNORT_INTRO_3.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"lab-environment\"\u003eLab environment:\u003c/h3\u003e\n\u003cp\u003e\u003cimg alt=\"SNORT_LAB_ENV\" loading=\"lazy\" src=\"/images/SNORT_TUT/SNORT_LAB_ENV.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ewe are not going to use this lab env just for the sake of simplicity of this excersise.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"installing-snort-on-ubuntu-2004-lts-\"\u003eInstalling snort on ubuntu 20.04 LTS :\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eBefore installing make sure \u003ccode\u003epromisc\u003c/code\u003e mode is on. While installing you will be prompted with to provide the \u003ccode\u003einterface\u003c/code\u003e name and \u003ccode\u003esubnet range\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt-get install snort -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e /etc/snort \u003cspan class=\"c1\"\u003e# The snort config files are sotred there only\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eNow we need to make a backup of the snort config files -\u0026gt; to copy the file we need to have elevated privileges.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecp snort.conf snort-backup.conf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg alt=\"SNORT_FOLD_STRUCT\" loading=\"lazy\" src=\"/images/SNORT_TUT/SNORT_FOLD_STRUCT.png\"\u003e\u003c/p\u003e","title":"Practical Snort"},{"content":" Installing wazuh in ubuntu 20.04 LTS step 1: curl -sO https://packages.wazuh.com/4.12/wazuh-install.sh \u0026amp;\u0026amp; sudo bash ./wazuh-install.sh -a This will take some time, and it will install all wazuh services, at the end it will provide the username and password of the wazuh server as well as in which port it is running. ![[Pasted image 20250725160156.png]] Then you need to disable auto update wazuh using this command -\u0026gt; sed -i \u0026#34;s/^deb /#deb /\u0026#34; /etc/apt/sources.list.d/wazuh.list apt update Note You can find the passwords for all the Wazuh indexer and Wazuh API users in the wazuh-passwords.txt file inside wazuh-install-files.tar. To print them run the following command -\u0026gt;\nsudo tar -O -xvf wazuh-install-files.tar wazuh-install-files/wazuh-passwords.txt Now i will set up the wazuh agent inside a windows machine . First install the wazuh GUI inside your windows machine using this doc page source -\u0026gt; wazuh-agent Then use this command inside the command prompt of the windows machine cd Downloads wazuh-agent-4.12.0-1.msi /q WAZUH_MANAGER=\u0026#34;wazuh_manager_IP\u0026#34; For powershell -\u0026gt; .\\wazuh-agent-4.12.0-1.msi /q WAZUH_MANAGER=\u0026#34;wazuh_manager_ip\u0026#34; Or you can directly double click on the installer file and provide the wazuh manager IP address -\u0026gt; click on manage -\u0026gt; start Onto the ubuntu machine wazuh manager refresh the page and you should see your agent running -\u0026gt; ","permalink":"https://0x-s0M3n4th.github.io/notes/blue-team-ops/02-wazuh/00-introduction-+-installation/","summary":"\u003cp\u003e\u003cimg alt=\"WAZUH_INTRO_1\" loading=\"lazy\" src=\"/images/WAZUH_TUT/WAZUH_INTRO_1.png\"\u003e\n\u003cimg alt=\"WAZUH_INTRO_2\" loading=\"lazy\" src=\"/images/WAZUH_TUT/WAZUH_INTRO_2.png\"\u003e\n\u003cimg alt=\"WAZUH_INTRO_3\" loading=\"lazy\" src=\"/images/WAZUH_TUT/WAZUH_INTRO_3.png\"\u003e\n\u003cimg alt=\"WAZUH_INTRO_4\" loading=\"lazy\" src=\"/images/WAZUH_TUT/WAZUH_INTRO_4.png\"\u003e\n\u003cimg alt=\"WAZUH_INTRO_5\" loading=\"lazy\" src=\"/images/WAZUH_TUT/WAZUH_INTRO_5.png\"\u003e\u003c/p\u003e\n\u003ch1 id=\"installing-wazuh-in-ubuntu-2004-lts\"\u003eInstalling wazuh in ubuntu 20.04 LTS\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003estep 1:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -sO https://packages.wazuh.com/4.12/wazuh-install.sh \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo bash ./wazuh-install.sh -a\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eThis will take some time, and it will install all wazuh services, at the end it will provide the username and password of the wazuh server as well as in which port it is running.\n![[Pasted image 20250725160156.png]]\u003c/li\u003e\n\u003cli\u003eThen you need to disable auto update wazuh using this command -\u0026gt;\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esed -i \u003cspan class=\"s2\"\u003e\u0026#34;s/^deb /#deb /\u0026#34;\u003c/span\u003e /etc/apt/sources.list.d/wazuh.list\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eapt update\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n            \u003clink rel=\"stylesheet\" href=\"/css/vendors/admonitions.4fd9a0b8ec8899f2ca952048d255a569f433f77dfb3f52f5bc87e7d65cdce449.css\" integrity=\"sha256-T9mguOyImfLKlSBI0lWlafQz9337P1L1vIfn1lzc5Ek=\" crossorigin=\"anonymous\"\u003e\n    \u003cdiv class=\"admonition note\"\u003e\n      \u003cdiv class=\"admonition-header\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"\u003e\u003cpath d=\"M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 125.7-86.8 86.8c-10.3 10.3-17.5 23.1-21 37.2l-18.7 74.9c-2.3 9.2-1.8 18.8 1.3 27.5L64 512c-35.3 0-64-28.7-64-64L0 64zm384 64l-128 0L256 0 384 128zM549.8 235.7l14.4 14.4c15.6 15.6 15.6 40.9 0 56.6l-29.4 29.4-71-71 29.4-29.4c15.6-15.6 40.9-15.6 56.6 0zM311.9 417L441.1 287.8l71 71L382.9 487.9c-4.1 4.1-9.2 7-14.9 8.4l-60.1 15c-5.5 1.4-11.2-.2-15.2-4.2s-5.6-9.7-4.2-15.2l15-60.1c1.4-5.6 4.3-10.8 8.4-14.9z\"/\u003e\u003c/svg\u003e\n        \u003cspan\u003eNote\u003c/span\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"admonition-content\"\u003e\n        \u003cp\u003eYou can find the passwords for all the Wazuh indexer and Wazuh API users in the \u003ccode\u003ewazuh-passwords.txt\u003c/code\u003e file inside \u003ccode\u003ewazuh-install-files.tar\u003c/code\u003e. To print them run the following command -\u0026gt;\u003c/p\u003e","title":"Practical Wazuh"},{"content":"Table of Contents Blogs My First Blog ","permalink":"https://0x-s0M3n4th.github.io/table-of-contents/","summary":"\u003ch2 id=\"table-of-contents\"\u003eTable of Contents\u003c/h2\u003e\n\u003ch3 id=\"blogs\"\u003eBlogs\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/Blogs/Welcome.md\"\u003eMy First Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Table of Contents"}]